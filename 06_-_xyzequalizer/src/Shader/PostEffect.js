var _0x4f37 = ['\x0a\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x0a\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20vUv\x20=\x20uv;\x0a\x0a\x20\x20\x20\x20vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(position,\x201.);\x0a\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x20\x20}\x0a', '\x0a\x20\x20\x20\x20//\x20some\x20glitches\x20based\x20on\x20on\x20https://www.shadertoy.com/view/ldjGzV\x0a\x20\x20\x20\x20precision\x20mediump\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20int;\x0a\x0a\x20\x20\x20\x20uniform\x20vec2\x20iResolution;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20tDiffuse;\x0a\x20\x20\x20\x20uniform\x20float\x20iGlobalTime;\x0a\x0a\x20\x20\x20\x20uniform\x20float\x20iMagnitude;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x0a\x20\x20\x20\x20float\x20noise(vec2\x20p)\x20{\x0a\x20\x20\x20\x20\x09float\x20s\x20=\x20texture2D(tDiffuse,vec2(1.,2.*cos(iGlobalTime))*iGlobalTime*8.\x20+\x20p*1.).x;\x0a\x20\x20\x20\x20\x09s\x20*=\x20s;\x0a\x20\x20\x20\x20\x09return\x20s;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20onOff(float\x20a,\x20float\x20b,\x20float\x20c)\x20{\x0a\x20\x20\x20\x20\x09return\x20step(c,\x20sin(iGlobalTime\x20+\x20a*cos(iGlobalTime*b)));\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20ramp(float\x20y,\x20float\x20start,\x20float\x20end)\x20{\x0a\x20\x20\x20\x20\x09float\x20inside\x20=\x20step(start,y)\x20-\x20step(end,y);\x0a\x20\x20\x20\x20\x09float\x20fact\x20=\x20(y-start)/(end-start)*inside;\x0a\x20\x20\x20\x20\x09return\x20(1.-fact)\x20*\x20inside;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20stripes(vec2\x20uv)\x20{\x0a\x0a\x20\x20\x20\x20\x09float\x20noi\x20=\x20noise(uv*vec2(0.5,1.)\x20+\x20vec2(1.,3.));\x0a\x20\x20\x20\x20\x09return\x20ramp(mod(uv.y*4.\x20+\x20iGlobalTime/2.+sin(iGlobalTime\x20+\x20sin(iGlobalTime*0.63)),1.),0.5,0.6)*noi;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20getVideo(vec2\x20uv)\x20{\x0a\x20\x20\x20\x20\x09vec2\x20look\x20=\x20uv;\x0a\x20\x20\x20\x20\x09float\x20window\x20=\x201./(1.+20.*(look.y-mod(iGlobalTime/4.,1.))*(look.y-mod(iGlobalTime/4.,1.)));\x0a\x20\x20\x20\x20\x09look.x\x20=\x20look.x\x20+\x20sin(look.y*10.\x20+\x20iGlobalTime)/50.*onOff(4.,4.,.3)*(1.+cos(iGlobalTime*80.))*window;\x0a\x20\x20\x20\x20\x09float\x20vShift\x20=\x200.4*onOff(2.,3.,.9)*(sin(iGlobalTime)*sin(iGlobalTime*20.)\x20+\x0a\x20\x20\x20\x20\x09\x09\x09\x09\x09\x09\x09\x09\x09\x09\x20(0.5\x20+\x200.1*sin(iGlobalTime*200.)*cos(iGlobalTime)));\x0a\x20\x20\x20\x20\x09look.y\x20=\x20mod(look.y\x20+\x20vShift,\x201.);\x0a\x20\x20\x20\x20\x09vec3\x20video\x20=\x20vec3(texture2D(tDiffuse,uv));\x0a\x20\x20\x20\x20\x09return\x20video;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20highp\x20float\x20rand(vec2\x20co)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20highp\x20float\x20a\x20=\x2012.9898;\x0a\x20\x20\x20\x20\x20\x20\x20\x20highp\x20float\x20b\x20=\x2078.233;\x0a\x20\x20\x20\x20\x20\x20\x20\x20highp\x20float\x20c\x20=\x2043758.5453;\x0a\x20\x20\x20\x20\x20\x20\x20\x20highp\x20float\x20dt=\x20dot(co.xy\x20,vec2(a,b));\x0a\x20\x20\x20\x20\x20\x20\x20\x20highp\x20float\x20sn=\x20mod(dt,3.14);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20fract(sin(sn)\x20*\x20c);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20vUv;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20grain\x20effect\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20strength\x20=\x2020.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20(uv.x\x20+\x204.0\x20)\x20*\x20(uv.y\x20+\x204.0\x20)\x20*\x20(iGlobalTime\x20*\x2010.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20grain\x20=\x20vec3(mod((mod(x,\x2013.0)\x20+\x201.0)\x20*\x20(mod(x,\x20123.0)\x20+\x201.0),\x200.01)-0.005)\x20*\x20strength;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Set\x20up\x20offset\x0a\x20\x20\x20\x20\x09vec2\x20offsetRedUV\x20=\x20uv;\x0a\x20\x20\x20\x20\x09offsetRedUV.x\x20=\x20uv.x\x20+\x20rand(vec2(0.1*0.03,uv.y*0.42))\x20*\x200.001;\x0a\x20\x20\x20\x20\x09offsetRedUV.x\x20+=\x20sin(rand(vec2(0.1*0.2,\x20uv.y)))*iMagnitude;\x0a\x0a\x20\x20\x20\x20\x09vec2\x20offsetGreenUV\x20=\x20uv;\x0a\x20\x20\x20\x20\x09offsetGreenUV.x\x20=\x20uv.x\x20+\x20rand(vec2(0.1*0.004,uv.y*0.002))\x20*\x200.004;\x0a\x20\x20\x20\x20\x09offsetGreenUV.x\x20+=\x20sin(0.1*9.0)*iMagnitude;\x0a\x0a\x20\x20\x20\x20\x09vec2\x20offsetBlueUV\x20=\x20uv;\x0a\x20\x20\x20\x20\x09offsetBlueUV.x\x20=\x20uv.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20offsetBlueUV.x\x20+=\x20rand(vec2(cos(0.1*0.01),sin(uv.y)));\x0a\x0a\x20\x20\x20\x20\x09//\x20Load\x20Texture\x0a\x20\x20\x20\x20\x09float\x20r\x20=\x20texture2D(tDiffuse,\x20offsetRedUV).r;\x0a\x20\x20\x20\x20\x09float\x20g\x20=\x20texture2D(tDiffuse,\x20offsetGreenUV).g;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20b\x20=\x20texture2D(tDiffuse,\x20uv).b;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20col\x20=\x20vec4(r,\x20g,\x20b,\x200);\x0a\x20\x20\x20\x20\x09vec3\x20video\x20=\x20getVideo(uv);\x0a\x20\x20\x20\x20\x09float\x20vigAmt\x20=\x201.;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20vignette\x20=\x20(0.75-vigAmt*(uv.y-.25)*(uv.y-.5))*(1.-vigAmt*(uv.x-.25)*(uv.x-.5));\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20video\x20+=\x20col.xyz;\x0a\x0a\x20\x20\x20\x20\x09video\x20+=\x20stripes(uv);\x0a\x20\x20\x20\x20\x09video\x20+=\x20noise(uv*2.)/2.;\x0a\x20\x20\x20\x20\x09video\x20*=\x20vignette;\x0a\x20\x20\x20\x20\x20\x20\x20\x20video\x20*=\x20(12.+mod(uv.y*30.+iGlobalTime,1.))/13.;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20vec3\x20final\x20=\x20vec3(video\x20+\x20grain);\x0a\x20\x20\x20\x20\x20\x20\x20\x20video\x20+=\x20grain;\x0a\x0a\x20\x20\x20\x20\x09gl_FragColor\x20=\x20vec4(video,1.0);\x0a\x20\x20\x20\x20}\x0a'];
(function (_0x396de9, _0x919eef) {
    var _0x55249b = function (_0x8b9b09) {
        while (--_0x8b9b09) {
            _0x396de9['push'](_0x396de9['shift']());
        }
    };
    _0x55249b(++_0x919eef);
}(_0x4f37, 0xf8));
var _0x2d2d = function (_0x5def28, _0x1bc4c9) {
    _0x5def28 = _0x5def28 - 0x0;
    var _0x4c3977 = _0x4f37[_0x5def28];
    return _0x4c3977;
};
const VERTEX = _0x2d2d('0x0');
const FRAGMENT = _0x2d2d('0x1');
export {
    VERTEX,
    FRAGMENT
};