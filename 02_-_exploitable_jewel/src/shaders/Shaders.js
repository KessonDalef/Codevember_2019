var _0x45e4 = ['\x0a\x20\x20\x20\x20//\x20Blur\x20effect\x0a\x20\x20\x20\x20//\x20Edited\x20from\x20https://www.shadertoy.com/view/XdfGDH\x0a\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20highp\x20int;\x0a\x0a\x20\x20\x20\x20uniform\x20vec2\x20iResolution;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20tDiffuse;\x0a\x20\x20\x20\x20uniform\x20float\x20iGlobalTime;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x0a\x20\x20\x20\x20float\x20AMPLITUDE\x20=\x200.0;\x0a\x0a\x20\x20\x20\x20float\x20normpdf(\x20in\x20float\x20x,\x20in\x20float\x20sigma)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x200.39894\x20*\x20exp(-0.5\x20*\x20x\x20*\x20x\x20/\x20(sigma\x20*\x20sigma))\x20/\x20sigma;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20vUv;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20c\x20=\x20texture2D(tDiffuse,\x20gl_FragCoord.xy\x20/\x20iResolution.xy).rgb;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20grain\x20effect\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20strength\x20=\x2010.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20(uv.x\x20+\x204.0)\x20*\x20(uv.y\x20+\x204.0)\x20*\x20(iGlobalTime\x20*\x2010.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20grain\x20=\x20vec3(mod((mod(x,\x2013.0)\x20+\x201.0)\x20*\x20(mod(x,\x20123.0)\x20+\x201.0),\x200.01)\x20-\x200.005)\x20*\x20strength;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20int\x20mSize\x20=\x205;\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20int\x20kSize\x20=\x20(mSize\x20-\x201)\x20/\x202;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20kernel[mSize];\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20final_colour\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//create\x20the\x201-D\x20kernel\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20sigma\x20=\x207.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20Z\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20j\x20=\x200;\x20j\x20<=\x20kSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20kernel[kSize\x20+\x20j]\x20=\x20kernel[kSize\x20-\x20j]\x20=\x20normpdf(float(j),\x20sigma);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//get\x20the\x20normalization\x20factor\x20(as\x20the\x20gaussian\x20has\x20been\x20clamped)\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20j\x20=\x200;\x20j\x20<\x20mSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Z\x20+=\x20kernel[j];\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//read\x20out\x20the\x20texels\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x20-kSize;\x20i\x20<=\x20kSize;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20j\x20=\x20-kSize;\x20j\x20<=\x20kSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20final_colour\x20+=\x20kernel[kSize\x20+\x20j]\x20*\x20kernel[kSize\x20+\x20i]\x20*\x20texture2D(tDiffuse,\x20(gl_FragCoord.xy\x20+\x20vec2(float(i),\x20float(j)))\x20/\x20iResolution.xy).rgb;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20c_step_1\x20=\x20final_colour\x20/\x20(Z\x20*\x20Z);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20c_step_1\x20+=\x20grain;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(c_step_1,\x201.0);\x0a\x20\x20\x20\x20}\x0a', '\x0a\x20\x20\x20\x20precision\x20mediump\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20int;\x0a\x0a\x20\x20\x20\x20uniform\x20vec4\x20color;\x0a\x0a\x20\x20\x20\x20varying\x20float\x20pointDistance;\x0a\x0a\x20\x20\x20\x20void\x20main()\x09{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(\x20color.xyz,\x20pointDistance);\x20\x20\x0a\x20\x20\x20\x20}\x0a', '\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vUv\x20=\x20uv;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(position,\x201.);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20}\x0a'];
(function (_0x16f3f6, _0x137d69) {
    var _0x51169d = function (_0x2a1c6e) {
        while (--_0x2a1c6e) {
            _0x16f3f6['push'](_0x16f3f6['shift']());
        }
    };
    _0x51169d(++_0x137d69);
}(_0x45e4, 0x194));
var _0x8837 = function (_0x1b97c9, _0x4574f3) {
    _0x1b97c9 = _0x1b97c9 - 0x0;
    var _0x36bb68 = _0x45e4[_0x1b97c9];
    return _0x36bb68;
};
const post_vertex = _0x8837('0x0');
const post_fragment = _0x8837('0x1');
const particles_vertex = '\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20highp\x20int;\x0a\x0a\x20\x20\x20\x20//\x09Classic\x20Perlin\x203D\x20Noise\x20\x0a\x20\x20\x20\x20//\x09by\x20Stefan\x20Gustavson\x0a\x20\x20\x20\x20//\x0a\x20\x20\x20\x20vec4\x20permute(vec4\x20x){return\x20mod(((x*34.0)+1.0)*x,\x20289.0);}\x0a\x20\x20\x20\x20vec4\x20taylorInvSqrt(vec4\x20r){return\x201.79284291400159\x20-\x200.85373472095314\x20*\x20r;}\x0a\x20\x20\x20\x20vec3\x20fade(vec3\x20t)\x20{return\x20t*t*t*(t*(t*6.0-15.0)+10.0);}\x0a\x0a\x20\x20\x20\x20float\x20cnoise(vec3\x20P){\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20Pi0\x20=\x20floor(P);\x20//\x20Integer\x20part\x20for\x20indexing\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20Pi1\x20=\x20Pi0\x20+\x20vec3(1.0);\x20//\x20Integer\x20part\x20+\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20Pi0\x20=\x20mod(Pi0,\x20289.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20Pi1\x20=\x20mod(Pi1,\x20289.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20Pf0\x20=\x20fract(P);\x20//\x20Fractional\x20part\x20for\x20interpolation\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20Pf1\x20=\x20Pf0\x20-\x20vec3(1.0);\x20//\x20Fractional\x20part\x20-\x201.0\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20ix\x20=\x20vec4(Pi0.x,\x20Pi1.x,\x20Pi0.x,\x20Pi1.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20iy\x20=\x20vec4(Pi0.yy,\x20Pi1.yy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20iz0\x20=\x20Pi0.zzzz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20iz1\x20=\x20Pi1.zzzz;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20ixy\x20=\x20permute(permute(ix)\x20+\x20iy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20ixy0\x20=\x20permute(ixy\x20+\x20iz0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20ixy1\x20=\x20permute(ixy\x20+\x20iz1);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20gx0\x20=\x20ixy0\x20/\x207.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20gy0\x20=\x20fract(floor(gx0)\x20/\x207.0)\x20-\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gx0\x20=\x20fract(gx0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20gz0\x20=\x20vec4(0.5)\x20-\x20abs(gx0)\x20-\x20abs(gy0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20sz0\x20=\x20step(gz0,\x20vec4(0.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20gx0\x20-=\x20sz0\x20*\x20(step(0.0,\x20gx0)\x20-\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gy0\x20-=\x20sz0\x20*\x20(step(0.0,\x20gy0)\x20-\x200.5);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20gx1\x20=\x20ixy1\x20/\x207.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20gy1\x20=\x20fract(floor(gx1)\x20/\x207.0)\x20-\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gx1\x20=\x20fract(gx1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20gz1\x20=\x20vec4(0.5)\x20-\x20abs(gx1)\x20-\x20abs(gy1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20sz1\x20=\x20step(gz1,\x20vec4(0.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20gx1\x20-=\x20sz1\x20*\x20(step(0.0,\x20gx1)\x20-\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gy1\x20-=\x20sz1\x20*\x20(step(0.0,\x20gy1)\x20-\x200.5);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g000\x20=\x20vec3(gx0.x,gy0.x,gz0.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g100\x20=\x20vec3(gx0.y,gy0.y,gz0.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g010\x20=\x20vec3(gx0.z,gy0.z,gz0.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g110\x20=\x20vec3(gx0.w,gy0.w,gz0.w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g001\x20=\x20vec3(gx1.x,gy1.x,gz1.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g101\x20=\x20vec3(gx1.y,gy1.y,gz1.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g011\x20=\x20vec3(gx1.z,gy1.z,gz1.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20g111\x20=\x20vec3(gx1.w,gy1.w,gz1.w);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20norm0\x20=\x20taylorInvSqrt(vec4(dot(g000,\x20g000),\x20dot(g010,\x20g010),\x20dot(g100,\x20g100),\x20dot(g110,\x20g110)));\x0a\x20\x20\x20\x20\x20\x20\x20\x20g000\x20*=\x20norm0.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20g010\x20*=\x20norm0.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20g100\x20*=\x20norm0.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20g110\x20*=\x20norm0.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20norm1\x20=\x20taylorInvSqrt(vec4(dot(g001,\x20g001),\x20dot(g011,\x20g011),\x20dot(g101,\x20g101),\x20dot(g111,\x20g111)));\x0a\x20\x20\x20\x20\x20\x20\x20\x20g001\x20*=\x20norm1.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20g011\x20*=\x20norm1.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20g101\x20*=\x20norm1.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20g111\x20*=\x20norm1.w;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n000\x20=\x20dot(g000,\x20Pf0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n100\x20=\x20dot(g100,\x20vec3(Pf1.x,\x20Pf0.yz));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n010\x20=\x20dot(g010,\x20vec3(Pf0.x,\x20Pf1.y,\x20Pf0.z));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n110\x20=\x20dot(g110,\x20vec3(Pf1.xy,\x20Pf0.z));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n001\x20=\x20dot(g001,\x20vec3(Pf0.xy,\x20Pf1.z));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n101\x20=\x20dot(g101,\x20vec3(Pf1.x,\x20Pf0.y,\x20Pf1.z));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n011\x20=\x20dot(g011,\x20vec3(Pf0.x,\x20Pf1.yz));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n111\x20=\x20dot(g111,\x20Pf1);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20fade_xyz\x20=\x20fade(Pf0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20n_z\x20=\x20mix(vec4(n000,\x20n100,\x20n010,\x20n110),\x20vec4(n001,\x20n101,\x20n011,\x20n111),\x20fade_xyz.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20n_yz\x20=\x20mix(n_z.xy,\x20n_z.zw,\x20fade_xyz.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20n_xyz\x20=\x20mix(n_yz.x,\x20n_yz.y,\x20fade_xyz.x);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x202.2\x20*\x20n_xyz;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20uniform\x20mat4\x20modelViewMatrix;\x20//\x20optional\x0a\x20\x20\x20\x20uniform\x20mat4\x20projectionMatrix;\x20//\x20optional\x0a\x0a\x20\x20\x20\x20uniform\x20float\x20uTime;\x0a\x20\x20\x20\x20uniform\x20float\x20geometryDistance;\x0a\x0a\x20\x20\x20\x20attribute\x20vec3\x20position;\x20\x0a\x20\x20\x20\x20attribute\x20vec2\x20angle;\x0a\x20\x20\x20\x20attribute\x20float\x20radius;\x0a\x20\x20\x20\x20attribute\x20vec2\x20noise_value;\x0a\x20\x20\x20\x20attribute\x20vec2\x20micronoise_value;\x0a\x0a\x20\x20\x20\x20varying\x20float\x20pointDistance;\x0a\x0a\x20\x20\x20\x20void\x20main()\x09{\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dist\x20=\x20geometryDistance\x20-\x20250.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(dist\x20<\x200.0)\x20dist\x20*=\x20-1.0;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20r\x20=\x20radius;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20r\x20*\x20angle.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20y\x20=\x20cnoise(vec3(noise_value.xy,\x20uTime))\x20*\x20400.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20z\x20=\x20r\x20*\x20angle.y;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20vPosition\x20=\x20vec3(x,\x20y,\x20z);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(vPosition,\x201.0);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20pointsize\x20=\x2010.0;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20length(gl_Position);\x20//\x20calculate\x20the\x20distance\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20attenuation\x20=\x20500.0\x20/\x20distance;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20cls\x20=\x20clamp(pointsize\x20*\x20attenuation,\x200.0,\x20pointsize);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20pointDistance\x20=\x20cls\x20*\x200.1;\x0a\x20\x20\x20\x20\x20\x20\x20\x20pointDistance\x20=\x200.01\x20+\x20dist\x20/\x206000.0;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_PointSize\x20=\x20cls;\x0a\x0a\x20\x20\x20\x20}\x0a';
const particles_fragment = _0x8837('0x2');
export {
    post_vertex,
    post_fragment,
    particles_vertex,
    particles_fragment
};