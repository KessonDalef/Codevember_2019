var _0x3060 = ['\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20highp\x20int;\x0a\x0a\x20\x20\x20\x20//\x20Tweak\x20from\x20https://www.vertexshaderart.com/art/nL6YpkW8YvGKNEKtj\x0a\x0a\x20\x20\x20\x20uniform\x20float\x20time;\x0a\x20\x20\x20\x20uniform\x20vec2\x20resolution;\x0a\x20\x20\x20\x20uniform\x20float\x20zoom;\x0a\x0a\x20\x20\x20\x20attribute\x20vec3\x20position;\x0a\x20\x20\x20\x20attribute\x20float\x20vertexId;\x0a\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x0a\x20\x20\x20\x20vec3\x20posf2(float\x20t,\x20float\x20i)\x20{\x0a\x20\x20\x20\x20\x09return\x20vec3(\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20sin(t*1.4+i*1.53)\x20+\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20sin(t*1.84+i*.76),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20sin(t*1.84+i*.476-2.1),\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20sin(t*1.4+i*1.23+2.1)\x20+\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20sin(t*1.84+i*.36+2.1)\x0a\x20\x20\x20\x20\x09)*.2;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20calcPosf0(float\x20t)\x20{\x0a\x20\x20\x20\x20\x20\x20return\x20posf2(t,-1.)*3.5;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20vec3\x20posf(float\x20t,\x20float\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20return\x20posf2(t*.3,i)\x20+\x20calcPosf0(t);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20time*.020;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20i\x20=\x20vertexId+sin(vertexId)*10.;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos\x20=\x20posf(t,i);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20ofs\x20=\x20vec3(0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(float\x20f\x20=\x20-10.;\x20f\x20<\x200.;\x20f++)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20tt\x20=\x20t\x20+\x20f\x20*\x20.05;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20lerpEnd\x20=\x202.\x20-\x20exp(-f\x20*\x20.1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tPos\x20=\x20posf(tt,\x20i)\x20+\x20ofs;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tPosf\x20=\x20fract(tPos\x20+\x20.5)\x20-\x20.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20l\x20=\x20length(tPosf)\x20*\x202.;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20ofs\x20+=\x20(-tPosf\x20+\x20tPosf\x20/\x20l)\x20*\x20(1.\x20-\x20smoothstep(lerpEnd,\x201.,\x20l));\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20lEnd\x20=\x20.999;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20posf\x20=\x20fract(pos\x20+\x20.5)\x20-\x20.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20l\x20=\x20length(posf)\x20*\x202.;\x0a\x20\x20\x20\x20\x20\x20\x20\x20ofs\x20+=\x20(-posf\x20+\x20posf\x20/\x20l)\x20*\x20(1.\x20-\x20smoothstep(lEnd,\x201.,\x20l));\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos\x20-=\x20calcPosf0(t);\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos\x20+=\x20ofs;\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos.yz\x20*=\x20mat2(.8,.6,-.6,.8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos.xz\x20*=\x20mat2(.8,.6,-.6,.8);\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos\x20*=\x20zoom;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos.z\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos.xy\x20*=\x20.6/pos.z;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20pos\x20*=\x202.0;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dm\x20=\x20distance(vec2(pos.x,\x20pos.y\x20*\x20resolution.x\x20/\x20resolution.y),\x20vec2(0.0,\x200.0))\x20*\x202.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20dm\x20=\x20clamp(dm,\x200.0,\x201.0);\x20//\x20*\x202.0;\x0a\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20vec4(pos.x,\x20pos.y*resolution.x/resolution.y,\x20pos.z*.1,\x201);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_PointSize\x20=\x202.\x20-\x20dm;///pos.z;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vColor\x20=\x20vec4(1.0,\x201.0,\x201.0,\x200.025\x20+\x20(dm*0.02));\x0a\x20\x20\x20\x20}\x0a', '\x0a\x20\x20\x20\x20precision\x20mediump\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20int;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20//\x20varying\x20vec4\x20out_FragColor;\x0a\x0a\x20\x20\x20\x20void\x20main()\x09{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(\x20vColor\x20);\x20\x20\x0a\x20\x20\x20\x20}\x0a', '\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20vUv\x20=\x20uv;\x0a\x0a\x20\x20\x20\x20\x20\x20vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(position,\x201.);\x0a\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x20\x20}\x0a', '\x0a\x20\x20\x20\x20//\x20Blur\x20effect\x0a\x20\x20\x20\x20//\x20Edited\x20from\x20https://www.shadertoy.com/view/XdfGDH\x0a\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20highp\x20int;\x0a\x0a\x20\x20\x20\x20uniform\x20vec2\x20iResolution;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20tDiffuse;\x0a\x20\x20\x20\x20uniform\x20float\x20iGlobalTime;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x0a\x20\x20\x20\x20float\x20AMPLITUDE\x20=\x200.0;\x0a\x0a\x20\x20\x20\x20float\x20normpdf(in\x20float\x20x,\x20in\x20float\x20sigma)\x20{\x0a\x20\x20\x20\x20\x09return\x200.39894*exp(-0.5*x*x/(sigma*sigma))/sigma;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20vUv;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20c\x20=\x20texture2D(tDiffuse,\x20gl_FragCoord.xy\x20/\x20iResolution.xy).rgb;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20center\x20=\x20vec2(0.5,\x200.5);\x0a\x0a\x20\x20\x20\x20\x09float\x20d\x20=\x20distance(center,\x20uv);\x0a\x20\x20\x20\x20\x09//\x20float\x20d\x20=\x20uv.y-0.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d2\x20=\x20d\x20*\x200.5;\x0a\x20\x20\x20\x20\x09AMPLITUDE\x20=\x20d2;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x09//\x20grain\x20effect\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20strength\x20=\x2015.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20(uv.x\x20+\x204.0\x20)\x20*\x20(uv.y\x20+\x204.0\x20)\x20*\x20(iGlobalTime\x20*\x2010.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20grain\x20=\x20vec3(mod((mod(x,\x2013.0)\x20+\x201.0)\x20*\x20(mod(x,\x20123.0)\x20+\x201.0),\x200.01)-0.005)\x20*\x20strength;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20int\x20mSize\x20=\x207;\x0a\x20\x20\x20\x20\x09const\x20int\x20kSize\x20=\x20(mSize-1)/2;\x0a\x20\x20\x20\x20\x09float\x20kernel[mSize];\x0a\x20\x20\x20\x20\x09vec3\x20final_colour\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x09//create\x20the\x201-D\x20kernel\x0a\x20\x20\x20\x20\x09float\x20sigma\x20=\x20d\x20*\x207.0;\x0a\x20\x20\x20\x20\x09float\x20Z\x20=\x200.0;\x0a\x20\x20\x20\x20\x09for\x20(int\x20j\x20=\x200;\x20j\x20<=\x20kSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x09\x09kernel[kSize+j]\x20=\x20kernel[kSize-j]\x20=\x20normpdf(float(j),\x20sigma);\x0a\x20\x20\x20\x20\x09}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x09//get\x20the\x20normalization\x20factor\x20(as\x20the\x20gaussian\x20has\x20been\x20clamped)\x0a\x20\x20\x20\x20\x09for\x20(int\x20j\x20=\x200;\x20j\x20<\x20mSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x09\x09Z\x20+=\x20kernel[j];\x0a\x20\x20\x20\x20\x09}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x09//read\x20out\x20the\x20texels\x0a\x20\x20\x20\x20\x09for\x20(int\x20i=-kSize;\x20i\x20<=\x20kSize;\x20++i)\x20{\x0a\x20\x20\x20\x20\x09\x09for\x20(int\x20j=-kSize;\x20j\x20<=\x20kSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x09\x09\x09final_colour\x20+=\x20kernel[kSize+j]*kernel[kSize+i]*texture2D(tDiffuse,\x20(gl_FragCoord.xy+vec2(float(i),float(j)))\x20/\x20iResolution.xy).rgb;\x0a\x20\x20\x20\x20\x09\x09}\x0a\x20\x20\x20\x20\x09}\x0a\x0a\x20\x20\x20\x20\x09vec3\x20c_step_1\x20=\x20final_colour/(Z*Z);\x0a\x0a\x20\x20\x20\x20\x09float\x20nd\x20=\x201.0-d2;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20lstep\x20=\x200.1;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20hstep\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20red\x20=\x20clamp(c_step_1.r\x20*\x20nd,\x20lstep,\x20hstep);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20green\x20=\x20clamp(c_step_1.g\x20*\x20nd,\x20lstep,\x20hstep);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20blue\x20=\x20clamp(c_step_1.b\x20*\x20nd,\x20lstep,\x20hstep);\x0a\x0a\x20\x20\x20\x20\x09vec3\x20c_step_2\x20=\x20vec3(red,\x20green,\x20blue);\x0a\x0a\x20\x20\x20\x20\x09c_step_2\x20+=\x20grain;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(c_step_2,\x201.0);\x0a\x20\x20\x20\x20}\x0a'];
(function (_0x35a115, _0x2affb7) {
    var _0x8641f0 = function (_0x2a5376) {
        while (--_0x2a5376) {
            _0x35a115['push'](_0x35a115['shift']());
        }
    };
    _0x8641f0(++_0x2affb7);
}(_0x3060, 0x15c));
var _0x2357 = function (_0x189f55, _0x2779a4) {
    _0x189f55 = _0x189f55 - 0x0;
    var _0x241454 = _0x3060[_0x189f55];
    return _0x241454;
};
const ps_vertex = _0x2357('0x0');
const ps_fragment = _0x2357('0x1');
const post_vertex = _0x2357('0x2');
const post_fragment = _0x2357('0x3');
export {
    ps_vertex,
    ps_fragment,
    post_vertex,
    post_fragment
};