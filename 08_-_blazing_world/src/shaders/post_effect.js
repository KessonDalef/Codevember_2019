var _0x2dce = ['\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vUv\x20=\x20uv;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(position,\x201.);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20}\x0a', '\x0a\x20\x20\x20\x20//\x20Blur\x20effect\x0a\x20\x20\x20\x20//\x20Edited\x20from\x20https://www.shadertoy.com/view/XdfGDH\x0a\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20highp\x20int;\x0a\x0a\x20\x20\x20\x20uniform\x20vec2\x20iResolution;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20tDiffuse;\x0a\x20\x20\x20\x20uniform\x20float\x20iGlobalTime;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x0a\x20\x20\x20\x20float\x20AMPLITUDE\x20=\x200.0;\x0a\x0a\x20\x20\x20\x20float\x20normpdf(\x20in\x20float\x20x,\x20in\x20float\x20sigma)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x200.39894\x20*\x20exp(-0.5\x20*\x20x\x20*\x20x\x20/\x20(sigma\x20*\x20sigma))\x20/\x20sigma;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20vUv;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20c\x20=\x20texture2D(tDiffuse,\x20gl_FragCoord.xy\x20/\x20iResolution.xy).rgb;\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20int\x20mSize\x20=\x207;\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20int\x20kSize\x20=\x20(mSize\x20-\x201)\x20/\x202;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20kernel[mSize];\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20final_colour\x20=\x20vec3(0.0);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//create\x20the\x201-D\x20kernel\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20sigma\x20=\x207.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20Z\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20j\x20=\x200;\x20j\x20<=\x20kSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20kernel[kSize\x20+\x20j]\x20=\x20kernel[kSize\x20-\x20j]\x20=\x20normpdf(float(j),\x20sigma);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//get\x20the\x20normalization\x20factor\x20(as\x20the\x20gaussian\x20has\x20been\x20clamped)\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20j\x20=\x200;\x20j\x20<\x20mSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Z\x20+=\x20kernel[j];\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20//read\x20out\x20the\x20texels\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20i\x20=\x20-kSize;\x20i\x20<=\x20kSize;\x20++i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20for\x20(int\x20j\x20=\x20-kSize;\x20j\x20<=\x20kSize;\x20++j)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20final_colour\x20+=\x20kernel[kSize\x20+\x20j]\x20*\x20kernel[kSize\x20+\x20i]\x20*\x20texture2D(tDiffuse,\x20(gl_FragCoord.xy\x20+\x20vec2(float(i),\x20float(j)))\x20/\x20iResolution.xy).rgb;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20c_step_1\x20=\x20final_colour\x20/\x20(Z\x20*\x20Z);\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(c_step_1,\x201.0);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20//\x20a\x20simple\x20INVERT\x20filter\x0a\x20\x20\x20\x20//\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20//\x20precision\x20highp\x20int;\x0a\x0a\x20\x20\x20\x20//\x20uniform\x20vec2\x20iResolution;\x0a\x20\x20\x20\x20//\x20uniform\x20sampler2D\x20tDiffuse;\x0a\x20\x20\x20\x20//\x20varying\x20vec2\x20vUv;\x0a\x0a\x20\x20\x20\x20//\x20void\x20main()\x20{\x0a\x20\x20\x20\x20//\x20\x20\x20\x20\x20vec2\x20uv\x20=\x20vUv;\x0a\x20\x20\x20\x20//\x20\x20\x20\x20\x20vec3\x20c\x20=\x20texture2D(tDiffuse,\x20gl_FragCoord.xy\x20/\x20iResolution.xy).rgb;\x0a\x0a\x20\x20\x20\x20//\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(1.0\x20-\x20c.r,\x201.0\x20-\x20c.g,\x201.0\x20-\x20c.b,\x201.0);\x0a\x20\x20\x20\x20//\x20}\x0a'];
(function (_0x3973c9, _0x43eaf8) {
    var _0x41b12f = function (_0xaf72fe) {
        while (--_0xaf72fe) {
            _0x3973c9['push'](_0x3973c9['shift']());
        }
    };
    _0x41b12f(++_0x43eaf8);
}(_0x2dce, 0x1c0));
var _0x193f = function (_0x1b97c9, _0x4574f3) {
    _0x1b97c9 = _0x1b97c9 - 0x0;
    var _0x36bb68 = _0x2dce[_0x1b97c9];
    return _0x36bb68;
};
const post_vertex = _0x193f('0x0');
const post_fragment = _0x193f('0x1');
export {
    post_vertex,
    post_fragment
};